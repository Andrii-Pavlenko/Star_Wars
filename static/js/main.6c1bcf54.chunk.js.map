{"version":3,"sources":["redux/Actions.js","redux/setOtherInSate.js","redux/Reducer.js","redux/Store.js","redux/Selectors.js","components/List.js","components/Buttons.js","components/FilmTable.js","components/Planets.js","components/Characters.js","components/Species.js","components/Starships.js","components/Vehicle.js","components/PlanetsToShow.js","components/SpeciesToShow.js","components/CharactersToShow.js","components/StarshipsToShow.js","components/VehiclesToShow.js","components/Film.js","customHooks/useWindowDimensions.js","App.js","index.js"],"names":["ACTION_TYPES","setError","error","type","payload","startLoading","stopLoading","sortHeros","dispatch","showFilm","index","searchHeros","value","search","otherURL","data","promises","map","fetch","then","y","json","Promise","all","results","savePlanets","catch","message","finally","listURL","people","axios","response","count","numberOfPagesLeft","Math","ceil","i","push","reduce","acc","setOtherInSate","state","population","planets","item","id","uuid","vehicle_class","vehicles","mass","characters","classification","species","starship_class","starships","initialState","isLoading","initialized","list","film","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","store","createStore","action","filter","title","toLowerCase","includes","slice","sort","a","b","localeCompare","applyMiddleware","rootSelector","selectList","createSelector","selectListError","selectIsLoading","selectFilm","selectPlanet","selectCharacters","selectStarships","selectVehicles","selectSpecies","PreparedList","connect","loadOther","filmToShow","List","horizontal","inverted","className","Segment","Group","raised","key","to","exact","Button","basic","color","onClick","planets2State","vehicles2State","characters2State","starships2State","species2State","loadPlanetsAndFilmToShow","ButtonsList","loadData","Input","icon","iconPosition","placeholder","onChange","e","target","FilmTable","toShow","Label","Table","definition","Body","Row","Cell","director","producer","release_date","opening_crawl","Planets","planet","name","diameter","gravity","orbital_period","rotation_period","surface_water","terrain","Characters","character","height","hair_color","skin_color","eye_color","birth_year","gender","Species","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","language","Starships","starship","model","manufacturer","cost_in_credits","length","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","hyperdrive_rating","MGLT","Vehicles","climate","PlanetsToShow","rightPlanet","setRightPlanet","link","Item","as","SpeciesToShow","setRightSpecies","rightSpecies","CharactersToShow","setRightCharacters","rightCharacters","StarshipsToShow","setRightStarships","rightStarships","VehiclesToShow","setRightVehicles","rightVehicles","vehicle","FilmShow","useState","Dimmer","active","Loader","size","getWindowDimensions","width","innerWidth","innerHeight","Enhanced","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","path","ReactDOM","render","url","document","getElementById"],"mappings":"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","file":"static/js/main.6c1bcf54.chunk.js","sourcesContent":["import axios from 'axios';\nexport const ACTION_TYPES = {\n  SAVE: 'SAVE',\n  SET_LOAD_ERROR: 'SET_LOAD_ERROR',\n  START_LOADING: 'START_LOADING',\n  STOP_LOADING: 'STOP_LOADING',\n  SEARCH: 'SEARCH',\n  SORT: 'SORT',\n  FILM_TO_SHOW: 'FILM_TO_SHOW',\n  SAVE_OTHER: 'SAVE_OTHER',\n};\n\nconst save = data => ({\n  type: ACTION_TYPES.SAVE,\n  payload: data,\n});\n\nconst savePlanets = data => ({\n  type: ACTION_TYPES.SAVE_OTHER,\n  payload: data,\n});\n\nconst setError = error => ({\n  type: ACTION_TYPES.SET_LOAD_ERROR,\n  payload: error,\n});\n\nconst startLoading = () => ({\n  type: ACTION_TYPES.START_LOADING,\n});\n\nconst stopLoading = () => ({\n  type: ACTION_TYPES.STOP_LOADING,\n});\n\nconst search = value => ({\n  type: ACTION_TYPES.SEARCH,\n  payload: value,\n});\n\nconst filmToShow = id => ({\n  type: ACTION_TYPES.FILM_TO_SHOW,\n  payload: id,\n});\n\nconst sort = () => ({\n  type: ACTION_TYPES.SORT,\n});\n\nexport const sortHeros = () => (dispatch) => {\n  dispatch(sort());\n};\n\nexport const showFilm = (index) => (dispatch) => {\n  dispatch(filmToShow(index));\n};\n\nexport const searchHeros = value => (dispatch) => {\n  dispatch(search(value));\n};\n\nexport const otherURL = data => (dispatch) => {\n  dispatch(startLoading(data));\n\n  const promises = data.map(data => fetch(data).then(y => y.json()));\n\n  Promise.all(promises).then((results) => {\n    dispatch(savePlanets(results));\n  })\n    .catch(error => dispatch(setError(error.message)))\n    .finally(() => dispatch(stopLoading()));\n};\n\nexport const listURL = () => (dispatch) => {\n  dispatch(startLoading());\n  \n  let people = [];\n  // first page\n  return axios(\"https://swapi.co/api/films/\")\n    .then(response => {\n        // collect people from first page\n        people = response.data.results;\n        return response.data.count;\n    })\n    .then(count => {\n        // exclude the first request\n        const numberOfPagesLeft = Math.ceil((count - 1) / 10);\n        let promises = [];\n        // start at 2 as you already queried the first page\n        for (let i = 2; i <= numberOfPagesLeft; i++) {\n            promises.push(axios(`https://swapi.co/api/films?page=${i}`));\n        }\n        return Promise.all(promises);\n    })\n    .then(response => {\n        //get the rest records - pages 2 through n.\n        people = response.reduce((acc, data) => [...acc, ...data.data.results], people);\n        dispatch(save(people));\n    })\n    .catch(error => dispatch(setError(error.message)))\n  .finally(() => dispatch(stopLoading()));\n};\n","import uuid from 'uuid';\n\nexport const setOtherInSate = (data, state) => {\n  if (data[0].population) {\n    return {\n      ...state,\n      error: false,\n      planets: data.map(item => ({\n        ...item,\n        id: uuid(), \n      })),\n    };\n  } else if (data[0].vehicle_class) {\n    return {\n      ...state,\n      error: false,\n      vehicles: data.map(item => ({\n        ...item,\n        id: uuid(), \n      })),\n    };\n  } else if (data[0].mass) {\n    return {\n      ...state,\n      error: false,\n      characters: data.map(item => ({\n        ...item,\n        id: uuid(), \n      })),\n    };\n  } else if (data[0].classification) {\n    return {\n      ...state,\n      error: false,\n      species: data.map(item => ({\n        ...item,\n        id: uuid(), \n      })),\n    };\n  } else if (data[0].starship_class) {\n    return {\n      ...state,\n      error: false,\n      starships: data.map(item => ({\n        ...item,\n        id: uuid(), \n      })),\n    };\n  } else {\n    return state;\n  }\n}","import uuid from 'uuid';\nimport { ACTION_TYPES } from './Actions';\nimport { setOtherInSate } from './setOtherInSate';\n\nconst initialState = {\n  isLoading: false,\n  error: false,\n  initialized: false,\n  list: null,\n  film: null,\n  planets: null,\n  characters: null,\n  starships: null,\n  vehicles: null,\n  species: null,\n};\n\nexport function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTION_TYPES.SAVE: {\n      const { payload } = action;\n\n      return {\n        ...state,\n        error: false,\n        film: null,\n        planets: null,\n        characters: null,\n        starships: null,\n        vehicles: null,\n        species: null,\n        list: payload.map(item => ({\n            ...item,\n            id: uuid(), \n        })),\n      };\n    }\n\n    case ACTION_TYPES.SAVE_OTHER: {\n      const { payload } = action;\n      return setOtherInSate(payload, state)     \n    }\n\n    case ACTION_TYPES.SET_LOAD_ERROR: {\n      return {\n        ...state,\n        error: true,\n        film: null,\n        planets: null,\n        characters: null,\n        starships: null,\n        vehicles: null,\n        species: null,\n        list: null,\n      };\n    }\n\n    case ACTION_TYPES.START_LOADING: {\n      return {\n        ...state,\n        isLoading: true,\n      };\n    }\n\n    case ACTION_TYPES.STOP_LOADING: {\n      return {\n        ...state,\n        isLoading: false,\n      };\n    }\n\n    case ACTION_TYPES.SEARCH: {      \n      const { payload } = action;\n\n      return {\n        ...state,\n        list: state.list.filter(\n          ({ title }) => title.toLowerCase().includes(payload.toLowerCase())\n        ),\n      };\n    }\n\n    case ACTION_TYPES.SORT: {\n      return {\n        ...state,\n        list: state.list.slice().sort(\n          (a, b) => a.title.localeCompare(b.title)\n        ),\n      };\n    }\n\n    case ACTION_TYPES.FILM_TO_SHOW: {\n      const { payload } = action;\n\n      return {\n        ...state,\n        film: state.list[payload].id,\n      };\n    }\n\n    default:\n      return state;\n  }\n}","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './Reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  || compose();\n\nconst middlewares = [thunk];\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectList = createSelector(\n  rootSelector,\n  ({ list }) => list\n);\n\nexport const selectListError = createSelector(\n  rootSelector,\n  ({ error }) => error\n);\n\nexport const selectIsLoading = createSelector(\n  rootSelector,\n  ({ isLoading }) => isLoading\n);\n\nexport const selectFilm = createSelector(\n  rootSelector,\n  ({ film }) => film\n);\n\nexport const selectPlanet = createSelector(\n  rootSelector,\n  ({ planets }) => planets\n);\n\nexport const selectCharacters = createSelector(\n  rootSelector,\n  ({ characters }) => characters\n);\n\nexport const selectStarships = createSelector(\n  rootSelector,\n  ({ starships }) => starships\n);\n\nexport const selectVehicles = createSelector(\n  rootSelector,\n  ({ planets }) => planets\n);\n\nexport const selectSpecies = createSelector(\n  rootSelector,\n  ({ species }) => species\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, List, Segment } from 'semantic-ui-react';\nimport '../App.css';\n\nimport {\n  selectList,\n} from '../redux/Selectors';\nimport {\n  showFilm,\n  otherURL\n} from '../redux/Actions';\nimport { NavLink } from 'react-router-dom';\n\nconst ListToPrepare = ({ list, filmToShow, loadOther }) => {\n  const loadPlanetsAndFilmToShow = (index, planets2State, vehicles2State, characters2State, starships2State, species2State) => {\n    filmToShow(index);\n    loadOther(planets2State);\n    loadOther(vehicles2State);\n    loadOther(characters2State);\n    loadOther(starships2State);\n    loadOther(species2State);\n  }\n\n  return (\n    <List horizontal inverted className=\"lower__container-list\">\n      {list.map((item, index) => {\n        return (\n          <Segment.Group raised key={item.id}> \n            <Segment inverted className=\"segment\">\n              <NavLink to={`/${item.id}`} exact>\n                <Button                \n                  basic \n                  inverted \n                  color='red' \n                  onClick={() => loadPlanetsAndFilmToShow(index, item.planets, item.vehicles, item.characters, item.starships, item.species)}\n                >\n                  {item.title}\n                </Button>\n              </NavLink>\n            </Segment>\n          </Segment.Group>            \n        )\n      })}     \n    </List>\n  )\n}\n\nfunction mapState2Props(state) {\n  return {\n    list: selectList(state),\n  };\n}\n\nconst mapDispatch2Props = dispatch => ({\n  loadOther: data => dispatch(otherURL(data)),\n  filmToShow: index => dispatch(showFilm(index)),\n});\n\nconst PreparedList = connect(\n  mapState2Props,\n  mapDispatch2Props,\n)(ListToPrepare);\n\nexport default PreparedList;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Button } from 'semantic-ui-react';\nimport {\n    searchHeros,\n    listURL,\n    sortHeros\n  } from '../redux/Actions';\nimport '../App.css';\n\nconst Buttons = ({ loadData, search, sort }) => {\n    return (\n      <>\n        <Input icon='users' iconPosition='left' placeholder='Search hero...' onChange={(e) => search(e.target.value)}/>\n        <div className=\"buttons\">\n          <Button type=\"button\" color='red' onClick={() => sort()}>\n              Sort!\n          </Button>\n          <Button type=\"button\" color='red' onClick={() => loadData(true)}>\n              Rfresh!\n          </Button>\n        </div>       \n      </>\n    )\n  } \n\n  const mapDispatch2Props = dispatch => ({\n    loadData: () => dispatch(listURL()),\n    search: value => dispatch(searchHeros(value)),\n    sort: () => dispatch(sortHeros()),\n  });\n  \n  const ButtonsList = connect(\n    null,\n    mapDispatch2Props,\n  )(Buttons);\n  \n  export default ButtonsList;","import React from 'react';\nimport { Label, Table } from 'semantic-ui-react';\nimport '../App.css';\n\nconst FilmTable = ({ toShow }) => {\n  return (\n    <>\n      <Label color='red' horizontal className=\"label\">\n        About film:\n      </Label>\n      <Table definition inverted>\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell>Title:</Table.Cell>\n            <Table.Cell>{toShow.title}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Director:</Table.Cell>\n            <Table.Cell>{toShow.director}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Producer:</Table.Cell>\n            <Table.Cell>{toShow.producer}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Release date:</Table.Cell>\n            <Table.Cell>{toShow.release_date}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Opening crawl:</Table.Cell>\n            <Table.Cell>{toShow.opening_crawl}</Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n    </> \n  )\n} \n\nexport default FilmTable;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Label, Table, Button } from 'semantic-ui-react';\nimport {\n  listURL,\n} from '../redux/Actions';\nimport '../App.css';\n\nconst Planet = ({ loadData, planet }) => {\n  return (\n    <div className=\"planets-container\">\n       <div className=\"film__list\">\n        <Link to=\"/home\">\n          <Button \n            type=\"button\" \n            color='red' \n            onClick={() => loadData()} \n            icon='home' \n            className=\"home-button\" \n          />\n        </Link>\n        <Label color='red' horizontal className=\"label\">\n          Planet:\n        </Label>\n        <Table definition>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>Name</Table.Cell>\n              <Table.Cell>{planet.name}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Diameter</Table.Cell>\n              <Table.Cell>{planet.diameter}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Gravity</Table.Cell>\n              <Table.Cell>{planet.gravity}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Orbital Pperiod</Table.Cell>\n              <Table.Cell>{planet.orbital_period}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Population</Table.Cell>\n              <Table.Cell>{planet.population}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Rotation period</Table.Cell>\n              <Table.Cell>{planet.rotation_period}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Surface Water</Table.Cell>\n              <Table.Cell>{planet.surface_water}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Terrain</Table.Cell>\n              <Table.Cell>{planet.terrain}</Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      </div>\n    </div> \n  )\n} \nconst mapDispatch2Props = dispatch => ({  \n  loadData: () => dispatch(listURL()),\n});\n\nconst Planets = connect(\n  null,\n  mapDispatch2Props,\n)(Planet);\n\nexport default Planets;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Label, Table, Button } from 'semantic-ui-react';\nimport {\n  listURL,\n} from '../redux/Actions';\nimport '../App.css';\n\nconst Character = ({ loadData, character }) => {\n  return (\n    <div className=\"characters-container\">\n      <div className=\"film__list\">\n        <Link to=\"/home\">\n          <Button \n            type=\"button\" \n            color='red' \n            onClick={() => loadData()} \n            icon='home' \n            className=\"home-button\" \n          />\n        </Link>\n        <Label color='red' horizontal className=\"label\">\n          Character:\n        </Label>\n        <Table definition inverted >\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>Name:</Table.Cell>\n              <Table.Cell>{character.name}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Height:</Table.Cell>\n              <Table.Cell>{character.height}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Mass:</Table.Cell>\n              <Table.Cell>{character.mass}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Hair color:</Table.Cell>\n              <Table.Cell>{character.hair_color}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Skin color:</Table.Cell>\n              <Table.Cell>{character.skin_color}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Eye color:</Table.Cell>\n              <Table.Cell>{character.eye_color}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Birth year:</Table.Cell>\n              <Table.Cell>{character.birth_year}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Gender:</Table.Cell>\n              <Table.Cell>{character.gender}</Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      </div>\n    </div> \n  )\n} \n\nconst mapDispatch2Props = dispatch => ({    \n  loadData: () => dispatch(listURL()),\n});\n\nconst Characters = connect(\n  null,\n  mapDispatch2Props,\n)(Character);\n\nexport default Characters;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Label, Table, Button } from 'semantic-ui-react';\nimport {\n  listURL,\n} from '../redux/Actions';\nimport '../App.css';\n\nconst Specie = ({ loadData, species }) => {\n  return (\n    <div className=\"species-container\">\n      <div className=\"film__list species\">\n        <Link to=\"/home\">\n          <Button \n            type=\"button\" \n            color='red' \n            onClick={() => loadData()} \n            icon='home' \n            className=\"home-button\" \n          />\n        </Link>\n        <Label color='red' className=\"label\">\n          Specie:\n        </Label>\n        <Table definition inverted >\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>Name:</Table.Cell>\n              <Table.Cell>{species.name}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Classification:</Table.Cell>\n              <Table.Cell>{species.classification}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Designation:</Table.Cell>\n              <Table.Cell>{species.designation}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Average height:</Table.Cell>\n              <Table.Cell>{species.average_height}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Skin colors:</Table.Cell>\n              <Table.Cell>{species.skin_colors}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Hair colors:</Table.Cell>\n              <Table.Cell>{species.hair_colors}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Eye colorss:</Table.Cell>\n              <Table.Cell>{species.eye_colors}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Average lifespan:</Table.Cell>\n              <Table.Cell>{species.average_lifespan}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>language:</Table.Cell>\n              <Table.Cell>{species.language}</Table.Cell>\n            </Table.Row>          \n          </Table.Body>\n        </Table>\n      </div>\n    </div> \n  )\n} \n\nconst mapDispatch2Props = dispatch => ({  \n  loadData: () => dispatch(listURL()),\n});\n\nconst Species = connect(\n  null,\n  mapDispatch2Props,\n)(Specie);\n  \n  export default Species;;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Label, Table, Button } from 'semantic-ui-react';\nimport {\n  listURL,\n} from '../redux/Actions';\nimport '../App.css';\n\nconst Starship = ({ loadData, starship }) => {\n  return (\n    <div className=\"starships-container\">\n      <div className=\"film__list\">\n        <Link to=\"/home\">\n          <Button \n            type=\"button\" \n            color='red' \n            onClick={() => loadData()} \n            icon='home' \n            className=\"home-button\" \n          />\n        </Link>\n        <Label color='red' horizontal className=\"label\">\n          Starship:\n        </Label>\n        <Table definition inverted >\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>Name:</Table.Cell>\n              <Table.Cell>{starship.name}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Model:</Table.Cell>\n              <Table.Cell>{starship.model}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Manufacturer:</Table.Cell>\n              <Table.Cell>{starship.manufacturer}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Cost in credits:</Table.Cell>\n              <Table.Cell>{starship.cost_in_credits}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Length:</Table.Cell>\n              <Table.Cell>{starship.length}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Max atmosphering speed:</Table.Cell>\n              <Table.Cell>{starship.max_atmosphering_speed}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Crew:</Table.Cell>\n              <Table.Cell>{starship.crew}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Passengers:</Table.Cell>\n              <Table.Cell>{starship.passengers}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Cargo capacity:</Table.Cell>\n              <Table.Cell>{starship.cargo_capacity}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Consumables:</Table.Cell>\n              <Table.Cell>{starship.consumables}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Hyperdrive rating:</Table.Cell>\n              <Table.Cell>{starship.hyperdrive_rating}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>MGLT:</Table.Cell>\n              <Table.Cell>{starship.MGLT}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Starship class:</Table.Cell>\n              <Table.Cell>{starship.starship_class}</Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      </div>\n    </div> \n  )\n} \n\nconst mapDispatch2Props = dispatch => ({  \n    loadData: () => dispatch(listURL()),\n  });\n  \n  const Starships = connect(\n    null,\n    mapDispatch2Props,\n  )(Starship);\n  \n  export default Starships;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Label, Table, Button } from 'semantic-ui-react';\nimport {\n  listURL,\n} from '../redux/Actions';\nimport '../App.css';\n\nconst Vehicle = ({ loadData, vehicles }) => {\n  return (\n    <div className=\"vehicle-container\">\n      <div className=\"film__list\">\n        <Link to=\"/home\">\n          <Button \n            type=\"button\" \n            color='red' \n            onClick={() => loadData()} \n            icon='home' \n            className=\"home-button\" \n          />\n        </Link>\n        <Label color='red' horizontal className=\"label\">\n          Vehicle:\n        </Label>\n        <Table definition inverted>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>Name:</Table.Cell>\n              <Table.Cell>{vehicles.name}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Rotation period:</Table.Cell>\n              <Table.Cell>{vehicles.rotation_period}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Orbital period:</Table.Cell>\n              <Table.Cell>{vehicles.orbital_period}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Diameter:</Table.Cell>\n              <Table.Cell>{vehicles.diameter}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Climate:</Table.Cell>\n              <Table.Cell>{vehicles.climate}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Gravity:</Table.Cell>\n              <Table.Cell>{vehicles.gravity}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Terrain:</Table.Cell>\n              <Table.Cell>{vehicles.terrain}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Surface water:</Table.Cell>\n              <Table.Cell>{vehicles.surface_water}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Population:</Table.Cell>\n              <Table.Cell>{vehicles.population}</Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      </div>\n    </div> \n  )\n} \n\nconst mapDispatch2Props = dispatch => ({  \n  loadData: () => dispatch(listURL()),\n});\n\nconst Vehicles = connect(\n  null,\n  mapDispatch2Props,\n)(Vehicle);\n\nexport default Vehicles;","import React from 'react';\nimport {  \n  Label, \n  Segment,\n  List \n} from 'semantic-ui-react';\n\nconst PlanetsToShow = ({ rightPlanet, planets, setRightPlanet }) => {\n  \n  return (\n    <>\n      <Label color='red' horizontal>\n        Planets\n      </Label>   \n      <Segment inverted className=\"segment\">\n        <List link inverted>\n          {planets.map(planet => {\n            return (\n              <List.Item \n                as='a' \n                onClick={() => setRightPlanet([...rightPlanet, planet])}\n                key={planet.id}\n              >\n                {planet.name}\n              </List.Item>\n          )})}              \n        </List>\n      </Segment>\n    </>\n  )\n}\n\nexport default PlanetsToShow;","import React from 'react';\nimport { \n  Label, \n  Segment,\n  List \n} from 'semantic-ui-react';\n\nconst SpeciesToShow = ({ species, setRightSpecies, rightSpecies }) => {\n  \n  return (\n    <>\n      <Label color='red' horizontal>\n        Species\n      </Label>   \n      <Segment inverted className=\"segment\">\n        <List link inverted>\n          {species.map(item => (\n            <List.Item \n              as='a'\n              onClick={() => setRightSpecies([...rightSpecies, item])}\n              key={item.id}\n            >\n              {item.name}\n            </List.Item>\n          ))}              \n        </List>\n      </Segment> \n    </>\n  )\n}\n\nexport default SpeciesToShow;","import React from 'react';\nimport {  \n  Label, \n  Segment,\n  List \n} from 'semantic-ui-react';\n\nconst CharactersToShow = ({ characters, setRightCharacters, rightCharacters }) => {\n  \n  return (\n    <>\n     <Label color='red' horizontal>\n        Characters\n      </Label>   \n      <Segment inverted className=\"segment\">\n        <List link inverted>\n          {characters.map(character => (\n            <List.Item \n              as='a'\n              onClick={() => setRightCharacters([...rightCharacters, character])}\n              key={character.id}\n            >\n              {character.name}\n            </List.Item>\n          ))}              \n        </List>\n      </Segment> \n    </>\n  )\n}\n\nexport default CharactersToShow;","import React from 'react';\nimport { \n  Label, \n  Segment,\n  List \n} from 'semantic-ui-react';\n\nconst StarshipsToShow = ({ starships, setRightStarships, rightStarships }) => {\n  \n  return (\n    <>\n      <Label color='red' horizontal>\n        Starships\n      </Label>   \n      <Segment inverted className=\"segment\">\n        <List link inverted>\n          {starships.map(starship => (\n            <List.Item \n              as='a'\n              onClick={() => setRightStarships([...rightStarships, starship])}\n              key={starship.id}\n            >\n              {starship.name}\n            </List.Item>\n          ))}              \n        </List>\n      </Segment> \n    </>\n  )\n}\n\nexport default StarshipsToShow;","import React from 'react';\nimport {  \n  Label, \n  Segment,\n  List \n} from 'semantic-ui-react';\n\nconst VehiclesToShow = ({ vehicles, setRightVehicles, rightVehicles }) => {\n  \n  return (\n    <>\n      <Label color='red' horizontal>\n        Vehicles\n      </Label>   \n      <Segment inverted className=\"segment\">\n        <List link inverted>\n          {vehicles.map(vehicle => (\n            <List.Item \n              as='a'\n              onClick={() => setRightVehicles([...rightVehicles, vehicle])}\n              key={vehicle.id}\n            >\n              {vehicle.name}\n            </List.Item>\n          ))}              \n        </List>\n      </Segment> \n    </>\n  )\n}\n\nexport default VehiclesToShow;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { \n  Button, \n  Dimmer, \n  Loader, \n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nimport { listURL } from '../redux/Actions';\nimport { \n  selectList, \n  selectFilm,\n  selectPlanet,\n  selectListError,\n  selectIsLoading,\n  selectCharacters,\n  selectStarships,\n  selectVehicles,\n  selectSpecies,  \n} from '../redux/Selectors';\n\nimport FilmTable from './FilmTable';\nimport Planets from './Planets';\nimport Characters from './Characters';\nimport Species from './Species';\nimport Starships from './Starships';\nimport Vehicles from './Vehicle';\nimport PlanetsToShow from './PlanetsToShow';\nimport SpeciesToShow from './SpeciesToShow';\nimport CharactersToShow from './CharactersToShow';\nimport StarshipsToShow from './StarshipsToShow';\nimport VehiclesToShow from './VehiclesToShow';\nimport '../App.css';\n\nconst Film = ({ \n  loadData, \n  characters,\n  starships, \n  isLoading, \n  error,\n  planets,\n  vehicles, \n  film,\n  list,\n  species\n}) => {\n\n  const [rightPlanet, setRightPlanet] = useState([]);\n  const [rightVehicles, setRightVehicles] = useState([]);\n  const [rightSpecies, setRightSpecies] = useState([]);\n  const [rightCharacters, setRightCharacters] = useState([]);\n  const [rightStarships, setRightStarships] = useState([]);\n\n  const toShow = () => {\n    if (film) {\n      return list.filter(item => item.id === film)[0];\n    }\n  }\n\n  if (isLoading) {\n    return (\n      <Dimmer active>\n        <Loader size='massive'>Loading...</Loader>\n      </Dimmer>\n    );\n  }\n\n  if (error) {\n    return (\n      <>\n        <p>Error occurred!!!</p>\n        <Button\n          type=\"button\"\n          onClick={() => loadData(true)}          \n        >\n            Try Again!\n        </Button>\n      </>\n    );\n  }\n\n  if (rightSpecies.length) {\n    return rightSpecies.map(species => (\n      <Species species={species} key={species.id} />\n    ))  \n  }\n\n  if (rightStarships.length) {\n    return rightStarships.map(starship => (\n      <Starships starship={starship} key={starship.id} />\n    )) \n  }\n\n  if (rightVehicles.length) {\n    return rightVehicles.map(vehicles => (\n      <Vehicles vehicles={vehicles} key={vehicles.id} />\n    ))\n  }\n\n  if (rightCharacters.length) {\n    return rightCharacters.map(character => (\n      <Characters character={character} key={character.id} />\n    ))\n  }\n\n  if (rightPlanet.length) {\n    return rightPlanet.map(planet => (\n      <Planets planet={planet} key={planet.id} />\n    ))\n  }\n\n  if (film \n    && toShow() \n    && characters \n    && starships \n    && planets \n    && vehicles \n    && species\n  ) {\n    \n    return (\n      <div className=\"film__container\">\n\n        <Link to=\"/home\">\n          <Button \n            type=\"button\" \n            color='red' \n            onClick={() => loadData()} \n            icon='home' \n            className=\"home-button\" \n          />\n        </Link>\n\n        <div className=\"film__list\">\n          <FilmTable toShow={toShow()} />\n          <PlanetsToShow \n            planets={planets} \n            rightPlanet={rightPlanet} \n            setRightPlanet={setRightPlanet}\n          />\n          <SpeciesToShow \n            species={species}\n            rightSpecies={rightSpecies}\n            setRightSpecies={setRightSpecies}\n          />\n          <CharactersToShow\n            characters={characters}\n            rightCharacters={rightCharacters}\n            setRightCharacters={setRightCharacters}\n          />\n          <StarshipsToShow\n            starships={starships}\n            rightStarships={rightStarships}\n            setRightStarships={setRightStarships}\n          />\n          <VehiclesToShow\n            vehicles={vehicles}\n            rightVehicles={rightVehicles}\n            setRightVehicles={setRightVehicles}\n          /> \n        </div>\n      </div>        \n    )\n  } \n\n  return (\n    <Dimmer active>\n      <Loader size='massive'>Loading, wait few seconds please!</Loader>\n    </Dimmer>\n  )\n} \n\n  function mapState2Props(state) {\n    return {\n      planets: selectPlanet(state),\n      error: selectListError(state),\n      isLoading: selectIsLoading(state),\n      list: selectList(state),\n      film: selectFilm(state),\n      characters: selectCharacters(state),\n      starships: selectStarships(state),\n      vehicles: selectVehicles(state),\n      species: selectSpecies(state),\n    };\n  }\n\n  const mapDispatch2Props = dispatch => ({    \n    loadData: () => dispatch(listURL()),\n  });\n  \n  const FilmShow = connect(\n    mapState2Props,\n    mapDispatch2Props,\n  )(Film);\n  \n  export default FilmShow;","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Dimmer, Loader } from 'semantic-ui-react';\nimport {\n  Link,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport {\n  listURL,\n  ACTION_TYPES,\n} from './redux/Actions';\nimport {\n  selectIsLoading,\n  selectList,\n  selectListError,\n  selectFilm,\n} from './redux/Selectors';\n\nimport './App.css';\nimport List from './components/List';\nimport ButtonsList from './components/Buttons';\nimport FilmShow from './components/Film';\nimport useWindowDimensions from './customHooks/useWindowDimensions';\n\nconst App = ({\n  isLoading,\n  error,\n  list,\n  loadData,\n  film,\n}) => {\n  const { width } = useWindowDimensions();\n  if (isLoading) {\n    return (\n      <Dimmer active>\n        <Loader size='massive'>Loading...</Loader>\n      </Dimmer>\n    );\n  }\n\n  if (error) {\n    return (\n      <>\n        <p>Error occurred!!!</p>\n        <Button\n          type=\"button\"\n          onClick={() => loadData(true)}\n        >\n            Try Again!\n        </Button>\n      </>\n    );\n  }\n\n  if (!list) {\n    if (width < 400) {\n      return (\n        <div className=\"container\">  \n          <Link to=\"/home\"> \n            <Button \n              color='red'\n              className=\"start-button\" \n              type=\"button\"\n              onClick={() => loadData(true)}\n            >\n              Start!\n            </Button>\n          </Link>\n        </div>\n      )\n    }\n    return (   \n      <div className=\"container\">  \n        <Link to=\"/home\"> \n          <Button \n            color='red'\n            className=\"start-button\" \n            size='massive'\n            type=\"button\"\n            onClick={() => loadData(true)}\n          >\n            Start!\n          </Button>\n        </Link>\n      </div>\n    );\n  }\n\n  if (film) {   \n    return (\n      <Route path={`/${film}`} exact>\n        <FilmShow />\n      </Route>\n    )\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/home\" >\n        <div className=\"main__container\">\n          <div className=\"upper__container\">\n            <ButtonsList />\n          </div>\n          <div className=\"lower__container\">\n            <List />     \n          </div>\n        </div>\n      </Route>\n    </Switch>\n  );\n}\n\nfunction mapState2Props(state) {\n  return {\n    list: selectList(state),\n    error: selectListError(state),\n    isLoading: selectIsLoading(state),\n    film: selectFilm(state),\n  };\n}\n\nconst mapDispatch2Props = dispatch => ({\n  loadData: () => dispatch(listURL()),\n  stopLoading: isLoading => dispatch({\n    type: ACTION_TYPES.STOP_LOADING,\n    isLoading,\n  }),\n});\n\nconst Enhanced = connect(\n  mapState2Props,\n  mapDispatch2Props,\n)(App);\n\nexport {Enhanced as App };\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Favicon from 'react-favicon';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport { store } from './redux/Store';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <Favicon url=\"https://cdn4.iconfinder.com/data/icons/famous-characters-add-on-vol-1-flat/48/Famous_Character_-_Add_On_1-33-512.png\" />\n      <App />\n    </Provider>\n  </HashRouter>\n, document.getElementById('root'));\n"],"sourceRoot":""}